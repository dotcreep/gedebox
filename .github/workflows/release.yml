name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, 386, arm, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'

      - name: Build binary
        run: |
          mkdir -p build
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXT=".exe"
          fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/gedebox-${{ matrix.goos }}-${{ matrix.goarch }}${EXT} main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: gedebox-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/gedebox-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            New Release Gedebox with version ${{ github.ref_name }}.
            - Package manager for Linux, Windows, and macOS.
            - Support AUR if exists.
            - Support SNAP if exists.
          prerelease: ${{ contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}

      - name: Upload Release Assets
        run: |
          for file in build/gedebox-*; do
            echo "Uploading $file"
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
                 -H "Content-Type: application/octet-stream" \
                 --data-binary @"$file" \
                 "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=$(basename "$file")"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
